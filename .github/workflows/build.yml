name: Release

on:
  push:
    branches:
    - '**'

jobs:
  u-build:
    name: build_ubuntu
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Env
      run: |
        sudo apt update
        # # fix:
        # # The following packages have unmet dependencies:...
        sudo apt-get install aptitude

        export packages=$packages"autopoint automake autotools-dev libtool gettext "
        export packages=$packages"build-essential libelf-dev binutils-dev libdwarf-dev gcc g++ git "
        export packages=$packages$(apt-cache search -n libc6-dev-amd64 | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n libssl dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n libxml2 dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n zlib | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n mingw-w64 | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n dpkg-dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n pkg-config | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n openssl dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n nettle dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n gcrypt dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n gnutls dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n gmp dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n glibc | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n unistring dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n p11-kit | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n libssh2 dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n libsqlite3 dev | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n expat | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n c-ares | cut -d " " -f 1 | tr "\n" " ")
        export packages=$packages$(apt-cache search -n libcppunit dev | cut -d " " -f 1 | tr "\n" " ")

        sudo aptitude -y install $packages

    - name: Build
      run: |
        git clone --depth=1 https://github.com/aria2/aria2.git aria2_git
        cd aria2_git
        git apply ../patch/*.patch

        autoreconf -i
        ./configure \
            --without-gnutls \
            ARIA2_STATIC=yes \

        make
        cd ../
        cp aria2_git/src/aria2c* ./
        rm -rf aria2_git
        strip aria2c*

    - name: zip
      run: zip -q -r ubuntu.zip *
      
    - name: Set Release Name
      run: |
        echo "TIME=$(date +"%Y-%m-%d")" >> $GITHUB_ENV
        echo "HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
        
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: AutoBuild-${{ env.TIME }}-${{ env.HASH }}
        files: ubuntu.zip
